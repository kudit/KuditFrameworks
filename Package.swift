// swift-tools-version: 5.10
// The swift-tools-version declares the minimum version of Swift required to build this package.

// WARNING:
// This file is automatically generated.
// Do not edit it by hand because the contents will be replaced.

import PackageDescription

var version = "4.3.4"
var packageLibraryName = "KuditFrameworks"

// Products define the executables and libraries a package produces, making them visible to other packages.
var products = [
	Product.library(
        name: "\(packageLibraryName) Library", // has to be named different from the iOSApplication or Swift Playgrounds won't open correctly
        targets: [packageLibraryName]
    ),
]

// Targets are the basic building blocks of a package, defining a module or a test suite.
// Targets can depend on other targets in this package and products from dependencies.
var targets = [
	Target.target(
		name: packageLibraryName,
		dependencies: [
			.product(name: "ParticleEffects Library", package: "particleeffects"),
			.product(name: "Device Library", package: "device"), // apparently needs to be lowercase.  Also note this is "Device Library" not "Device"
			.product(name: "Ink", package: "ink"),
		],
		path: "Sources"
            // If resources need to be included, include here
//            resources: [.process("Resources")]
	),
]

var platforms: [SupportedPlatform] = [ // minimums for Date.now
	.iOS("15.2"),
	.macOS("12.0"), // minimum for foregroundStyle (Touchbook running Monterey), also minimum for ParticleEffects
	.tvOS("17.0"), // Menu is only available after tvOS 17 (and we don't have any apps we're supporting for earlier tvOS)
	.watchOS("8.0"),
]

#if os(visionOS)
platforms += [
    .visionOS("1.0"), // unavailable in Swift Playgrounds
]
#endif

#if canImport(AppleProductTypes) // swift package dump-package fails because of this
import AppleProductTypes

products += [
	.iOSApplication(
		name: packageLibraryName, // needs to match package name to open properly in Swift Playgrounds
		targets: ["\(packageLibraryName)TestAppModule"],
		teamIdentifier: "3QPV894C33",
		displayVersion: version,
		bundleVersion: "1",
		appIcon: .asset("AppIcon"),
		accentColor: .presetColor(.red),
		supportedDeviceFamilies: [
			.pad,
			.phone
		],
		supportedInterfaceOrientations: [
			.portrait,
			.landscapeRight,
			.landscapeLeft,
			.portraitUpsideDown(.when(deviceFamilies: [.pad]))
		],
		capabilities: [
			.outgoingNetworkConnections()
		],
		appCategory: .developerTools
	),
]

targets += [
	.executableTarget(
		name: "\(packageLibraryName)TestAppModule",
		dependencies: [
			.init(stringLiteral: packageLibraryName), // have to use init since normally would be assignable by string literal
		],
		path: "Development",
//            exclude: ["Tests", "Sources"],
		swiftSettings: [
			.enableUpcomingFeature("BareSlashRegexLiterals")
		]
	),
	.testTarget(
		name: "\(packageLibraryName)Tests",
		dependencies: [
			.init(stringLiteral: packageLibraryName), // have to use init since normally would be assignable by string literal
		],
		path: "Tests"
	),
]

#endif // for Swift Package compiling for https://swiftpackageindex.com/add-a-package

let package = Package(
    name: packageLibraryName,
    platforms: platforms,
    products: products,
    dependencies: [
        // Dependencies declare other packages that this package depends on.
//        .package(url: "https://github.com/GetStream/effects-library", "1.0.0"..<"2.0.0"),
        .package(url: "https://github.com/kudit/ParticleEffects", "1.0.0"..<"2.0.0"),
        .package(url: "https://github.com/johnsundell/ink.git", "0.6.0"..<"1.0.0"),
        .package(url: "https://github.com/kudit/Device", "2.1.4"..<"3.0.0")
    ],
    targets: targets
)